from os import system, getenv
system('pip install requests discord.py fuzzywuzzy')
from requests import get
from discord import Client, File
from discord import utils
from discord.message import Message
from random import choice
from re import findall, match  # from playsound import playsound
from youtube import allVideos
from fuzzywuzzy.fuzz import ratio


def isOneEl(l: list, limit: int) -> bool:
    ct = 0
    for i in l[::-1]:
        if i == l[-1]:
            ct += 1
        else:
            break
    if ct == limit:
        return True
    else:
        return False


def valcursed(v):
    r = get('https://www.cbr-xml-daily.ru/daily_json.js')
    data = r.json()
    return data['Valute'][v]['Value']


class Client_(Client):
    spam = []
    muted_channels_list = ['–∫–æ–Ω—Ç–∞–∫—Ç—ã', '–ø—Ä–∞–≤–∏–ª–∞']
    text_channel_list = []
    videos_list = []
    spamLimit = 4
    commands = ['!–±–æ—Ç', "!–∫–æ–º–∞–Ω–¥—ã", "!–ª–æ–≥–æ"]
    question_message_id = 813751244467470336
    roles = {
        '–∞–¥–º–∏–Ω': 813123398656983090,
        '—É—á–∞—Å—Ç–Ω–∏–∫': 813750101968683008
    }
    
    
    async def on_ready(self):
        for guild in self.guilds:
            for channel in guild.text_channels:
                self.text_channel_list.append(channel.name)
        print('[INFO] Channel list is got')
        print(f'[INFO] logged in as @{self.user}')

    async def on_member_join(self, member):
        for ch in self.get_guild(member.guild.id).channels:
            if ch.name == 'üó®–æ—Å–Ω–æ–≤–Ω–æ–π_maini':
                await self.get_channel(ch.id).send(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä, {member}! Elei≈õgen√§ Emes ≈õe≈ïve≈ïte, {member}!')

    async def on_message(self, message: Message):
        author = message.author
        content: str = message.content
        print(f'[MESSAGE] Content: {content}\nAuthor: {author}\n|')
        if author == Client().user:
            return
        if content.lower() == "!–±–æ—Ç":
            await message.channel.send(choice(['–î–∞ / Hes', "–ê–≥–∞ / Ugju", "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? / Kau kunem te luo≈õo?", "–Ø —Ç—É—Ç / Hestem je≈ïy"]))
        elif content == '!–∫–æ–º–∞–Ω–¥—ã':
            await message.channel.send('–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n!–±–æ—Ç\n!–∫–æ–º–∞–Ω–¥—ã-–≤—ã–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—ã\n!–ª–∏–º–∏—Ç —Å–ø–∞–º–∞ [—á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π]-—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç —Å–ø–∞–º–∞(–¥–ª—è –∞–¥–º–∏–Ω–æ–≤)\n!–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ –∏ –±–æ—Ç–µ\n!–∞–≤–∞ - –≤—ã–≤–µ—Å—Ç–∏ –∞–≤–∞—Ç–∞—Ä\n!–∫—É—Ä—Å –≤–∞–ª—é—Ç—ã [–∫–æ–¥ –≤–∞–ª—é—Ç—ã] - –≤—ã–≤–µ—Å—Ç–∏ –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã –∫ —Ä—É–±–ª—é\n\n')
        elif content == '!–∏–Ω—Ñ–æ':
            await message.channel.send('–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–∞')
        elif content == '!–∞–≤–∞':
            await message.channel.send(message.author.avatar_url)
        elif match(r'!–∫—É—Ä—Å –≤–∞–ª—é—Ç—ã [a-zA-Z]{3}', content.lower()):
            currency = str(findall(r'[a-zA-Z]{3}', content)[0]).upper()
            try:
                await message.channel.send(str(valcursed(currency)) + ' ‚ÇΩ')
            except KeyError:
                await message.channel.send(f"–í–∞–ª—é—Ç—ã {currency} –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ")
        elif match(r'!–ª–∏–º–∏—Ç —Å–ø–∞–º–∞ \d+', str(content)):
            roles = {}
            for role in message.author.roles:
                roles[str(role)] = role  # !!!–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å str(role.mention)
            if '–∞–¥–º–∏–Ω' in roles:
                limit = int(str(content).replace('!–ª–∏–º–∏—Ç —Å–ø–∞–º–∞ ', ''))
                if limit > 0:
                    self.spamLimit = int(str(content).replace('!–ª–∏–º–∏—Ç —Å–ø–∞–º–∞ ', ''))
                    await message.channel.send(f'–õ–∏–º–∏—Ç —Å–ø–∞–º–∞: {str(content).replace("!–ª–∏–º–∏—Ç —Å–ø–∞–º–∞ ", "")} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!')
                else:
                    await message.channel.send('–õ–∏–º–∏—Ç —Å–ø–∞–º–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0')
            else:
                await message.channel.send(f'{author.mention}, —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!')
        elif content == '!—Å—Ç–æ–ø':
            roles = {}
            for role in message.author.roles:
                roles[str(role)] = role  # !!!–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å str(role.mention)
            if '–∞–¥–º–∏–Ω' in roles:
                message.channel.send('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')
                quit()
            else:
                await message.channel.send(f'{author.mention}, —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!')
        elif match(r'!–≤–∏–¥–µ–æ .+', content):
            await message.channel.send('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
            cont = content[7:]
            self.videos_list = []
            for i in allVideos(channelId='UC2D-WeF4oMlyjlGq7hjRe9g', titles=True):
                self.videos_list.append(i)
            await message.channel.send('–°–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ —Å –∫–∞–Ω–∞–ª–∞ –ø–æ–ª—É—á–µ–Ω')
            has = False
            for i in self.videos_list:
                if ratio(i[2].lower(), cont.lower()) > 30:
                    has = True
                    statistic = f'%–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞%\n–ù–∞–∑–≤–∞–Ω–∏–µ: {i[2]}\n–°—Å—ã–ª–∫–∞: {i[0]}\nID: {i[1]}\n–î–∞—Ç–∞: {i[3]}\n–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {i[4].replace("viewCount ", "")}\n–õ–∞–π–∫–∏: {i[5].replace("likeCount ", "")}\n–î–∏–∑–ª–∞–π–∫–∏: {i[6].replace("dislikeCount ", "")}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {i[8].replace("commentCount ", "")}'
                    await message.channel.send(statistic)
                    break
            if not has:
                await message.channel.send(f'–í–∏–¥–µ–æ "{cont}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∞ –∫–∞–Ω–∞–ª–µ')
        else:
            self.spam.append([content, author])
            if isOneEl(self.spam, self.spamLimit):
                await message.channel.purge(limit=self.spamLimit)
                self.spam = []
            elif str(message.channel) in self.muted_channels_list:
                await message.delete()


if __name__ == '__main__':
    Client_().run(getenv('TOKEN'))
